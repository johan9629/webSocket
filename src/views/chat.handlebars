
<link rel="stylesheet" href=" https://cdn.jsdelivr.net/npm/sweetalert2@11.14.1/dist/sweetalert2.min.css">
<div>
    <h2>Todo listo para trabajar con wesockets</h2>
</div>

<div style="margin-top: 2rem; border: 1px solid #666; padding: 1rem; width: 360px">
    <p id="msgList" style="padding: 0; margin: 0;"></p>
</div>
<div style="margin-top: 2rem;">
    <input class="form-control" type="text" id="msg" placeholder="tipear mensaje" style="width: 360px;">
</div>

{{!-- <script src="/socket.io/socket.io.js"></script> --}}
<script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.14.1/dist/sweetalert2.all.min.js"></script>
<script type="module">

    console.log("Hola desde el cliente");

    const url = "";
    const options = {};
    const user = { nickName: '' };

    const msgField = document.getElementById("msg");
    const msgList = document.getElementById("msgList");


    const askName = async () => {
        const result = await swal.fire({
            title: "Coder Chat",
            input: "text",
            text: "Bienvenido!, indica tu nombre para el chat",
            inputValidador: val => !val && 'Indicar nombre',
            allowOutsideClick: false,
        });
        user.nickName = result.value || 'invitado';
    };

    const notify = (text) => {
        swal.fire({
            text: text,
            toast: true,
            position: "top-end",
            timer: 3000,
            showConfirmButton: false,
        });
    };

    const socketClient = io(url, options);

    socketClient.on("connect", async () => {
        console.log(`Conectado al servidor de sockets.io ${url}`);
        await askName();
        socketClient.emit("new_user_data", {user: user.nickName});
    });

    socketClient.on("current_messages", data => {
        console.log("Mensajes actuales", data);
        msgList.innerHTML = '';
        data.forEach(msg => {
            msgList.innerHTML += `<br/><strong>[${msg.user}</strong>] ${msg.msg}`
        })
    })

    socketClient.on("new_user", data => {
        notify(`${data.user} se ha conectado!`)
    })

    socketClient.on("new_msg", data => {
        msgList.innerHTML += `<br/><strong>[${data.user}</strong>] ${data.msg}`;
    });

    msgField.addEventListener("keyup", event => {
        if(event.key === "Enter" && msgField.value !== "") {
            const data = {user: user.nickName, msg: msgField.value}
            socketClient.emit("new_own_msg", data);
            msgField.value = "";
        }
    });


</script>

